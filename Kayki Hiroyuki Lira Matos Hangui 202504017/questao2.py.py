# -*- coding: utf-8 -*-
"""Untitled18.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1skr386XDd8s-LzM5KSH2T7dGA_to-xfe
"""

#Aluno: Kayki Hiroyuki Lira Matos Hangui
#Questão 2, controle de finanças

#a)

metas = { }

#a)

categorias = ["Educação", "Essencial", "Lazer", "Transporte", "Saúde"]

print ("Defina sua meta de gastos mensais pra cada categoria: \n")
for categoria in categorias:
    valor_da_meta =float(input(f"Meta de '{categoria}': R$ "))
    metas[categoria] = valor_da_meta

#Pedi que o usuário defina uma meta de gasto mensal pra cada categoria da lista, os valores são salvos em um dicionário (metas), onde cada categoria tem um valor associado, o valor
#é solicitado via input e armazenado como float no dicionário


#b)

num_lancamentos = int(input("Quantos lançamentos finaceiros você quer registrar? "))

gastos = { }
for categoria in categorias:
    gastos[categoria] = 0

#Aqui eu endago quantos gastos o usuário deseja registrar e preparo outro dicionário (gastos) pra guardar os valores reais gastos em cada categoria, funcionando como um acumulador
#por categoria durante o loop dos lançamentos


#c)

for i in range(num_lancamentos):
    print(f"\nLançamento #{i+1}")
    descricao = input('Descrição da despesa:(ex: "Mercado", "Transporte", "Internet", "Farmácia") ')
    valor = float(input("Valor da despesa (R$): "))
    categoria = input("Categoria da despesa: ")


    if categoria in categorias:
      gastos[categoria] += valor
    else:
      print(f"Categoria não válida. Lançamento não executado")

#Aqui eu solicito que o usuário coloque os detalhes de cada gasto (descrição textual, valor pelo float e categoria por string), se a categoria for válida (tiver na lista) o valor é
#somado no dicionário gastos caso não esteja, o programa dá o recado e ignora aquele lançamento.


#d)
print("\nRelatório Financeiro")

total_de_despesas_no_mes = sum(gastos.values())
print(f"Total de despesas no mes: R$ {total_de_despesas_no_mes:.2f}")

#Somo tudo o que foi gasto no mês (utilizo a função embutida sum() para agregar os valores do dicionário gastos) e mostro o total geral com duas casas decimais

print("\nGasto total por categoria: ")
for cat in categorias:
    print(f"- {cat}: R$ {gastos[cat]:.2f}")

#mostro quanto foi gasto por categoria (com duas casas decimais pela formatação com .2f)

print("\nMédia de gastos por categoria:")
for cat in categorias:
    media = gastos[cat] / num_lancamentos
    print(f"- {cat}: R$ {media:.2f}")

#Faço o calcúlo e mostro a média de gastos por categoria, dividindo o total de cada um pelo número de lançamentos colocados

categoria_maior = max(gastos,   key=gastos.get)

print(f"\nCategoria com  o maior valor gasto (dindin usado): {categoria_maior} (R$ {gastos[categoria_maior]:.2f})")

#Aqui identifico em qual categoria o usuario mais gastou e mostro essa informação

print("\nAnalise em relação ao valor gasto e as metas que o usuário botou")
for cat in categorias:
    gasto = gastos[cat]
    meta = metas[cat]


    if gasto > meta:
      status = "Passou da meta"
    elif gasto < meta:
      status = "Nem chegou na meta"
    else:
      status = "Exatamente na meta"

    print(f"- {cat}: Gasto = R$ {gasto:.2f} | Meta = R$ {meta:.2f} -> {status}")

#Aqui faço uma comparação entre o valor gasto e a meta definida pra cada categoria e mostro se a pessoa passou da meta, ficou abaixo ou bateu nela certinho