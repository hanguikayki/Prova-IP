# -*- coding: utf-8 -*-
"""Untitled18.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1skr386XDd8s-LzM5KSH2T7dGA_to-xfe
"""

#Aluno: Kayki Hiroyuki Lira Matos Hangui
#Questão 3 – Análise de dados de temperatura

import numpy as np
import pandas as pd

# a) Gerando as temperaturas
np.random.seed(42)  # Pra não bagunçar tudo toda vez
temperaturas = np.random.uniform(15, 30, 30)  # de 15 a 30 graus, no susto mesmo
media = np.mean(temperaturas)
mediana = np.median(temperaturas)
desvio = np.std(temperaturas)
variacao = ((temperaturas.max() - temperaturas.min()) / media) * 100

print("=== Estatísticas do mês ===")
print(f"Média: {media:.2f}°C")
print(f"Mediana: {mediana:.2f}°C")
print(f"Desvio padrão: {desvio:.2f}")
print(f"Variação térmica relativa: {variacao:.2f}%\n")

#Gerei os dadoss de temperatura do mês usando np.random.uniform(), simulando um mês de 30 dias com valores entre 15 graus e 38 graus, depois fiz o calculo de algumas estatísticas
#(média, mediana, desvio padrão, variação média do mês/ variação térmica relativa)


# b)

df = pd.DataFrame({
    'Dia': np.arange(1, 31),
    'Temperatura': temperaturas,
})
df['Diferença pra média'] = df['Temperatura'] - media

#Fiz um Dataframe com duas colunas principais: número do dia (1 - 30) e a temperatura daquele dia, posteriormente adicionei a coluna 'Diferença pra media' pra demonstrar quanto
#cada dia ficou acima ou abaixo da tempearura média do mês


#c) Classificando a temperatura

condicoes = [
    df['Temperatura'] < 18,
    (df['Temperatura'] >= 18) & (df['Temperatura'] <= 25),
    df['Temperatura'] > 25
]
valores = ['Frio', 'Agradável', 'Quente']
df['Classificação térmica'] = np.select(condicoes, valores, default='Meio doido')

#Fiz a classificação de cada temperatura em frio, agradável e quente, com a utlização do np.select() para aplicar essas condições

#d)

df['Relação com a média'] = df['Diferença pra média'].apply(lambda x:
    'Acima da média mensal' if x > 0 else
    'Abaixo da média mensal' if x < 0 else
    'Na média certim')

#Fiz uma nova coluna usando .apply() com lambda, que identifica se a temperatura do dia ficou acima, abaixo ou identica à média do mês

contagem = df['Classificação térmica'].value_counts()
mais_quentes = df.nlargest(5, 'Temperatura')
mais_frios = df.nsmallest(5, 'Temperatura')
top10 = pd.concat([mais_quentes, mais_frios]).drop_duplicates().sort_values(by='Temperatura', ascending=False)

#Aqui usei value_counts() pra fazer a contagem de quantos dias foram frios, quentes e agradaveis
#usei também nlargest() e nsmallest() para fazer a identificação dos 5 dias mais quentes e os 5  mais frios do mês

print("===Relação dos 10 dias extremos com a média===")
print(top10[['Dia', 'Temperatura', 'Classificação térmica', 'Relação com a média']], "\n")

tem_frio_acima = df[(df['Classificação térmica'] == 'Frio') & (df['Diferença pra média'] > 0)].shape[0] > 0
tem_quente_abaixo = df[(df['Classificação térmica'] == 'Quente') & (df['Diferença pra média'] < 0)].shape[0] > 0

#Fiz a verificação se houve algum dia considerado frio mas que ficou acima da média e se houve algum dia quente porém que ficou abaixo da média


print("=== Contagem por classificação térmica ===")
print(contagem, "\n")

print("=== 5 dias mais quentes ===")
print(mais_quentes[['Dia', 'Temperatura', 'Classificação térmica']], "\n")

print("=== 5 dias mais frios ===")
print(mais_frios[['Dia', 'Temperatura', 'Classificação térmica']], "\n")

print("=== Relação dos 10 dias extremos com a média ===")
print(top10[['Dia', 'Temperatura', 'Classificação térmica', 'Relação com a média']], "\n")

print("=== Verificações finais ===")
print("Teve dia frio acima da média?", "Uai, teve sim!" if tem_frio_acima else "Teve não!")
print("Teve dia quente abaixo da média?", "Oxente, teve mesmo!" if tem_quente_abaixo else "Que nada, tudo normal!")

print("\n=== Tabela completona dos 30 dias ===")
print(df.to_string(index=False))