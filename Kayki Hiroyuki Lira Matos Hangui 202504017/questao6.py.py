# -*- coding: utf-8 -*-
"""Untitled18.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1skr386XDd8s-LzM5KSH2T7dGA_to-xfe
"""

#Aluno: Kayki Hiroyuki Lira Matos Hangui
#Quest√£o 6,  dashboard criptomoedas
#N√∫mero da matr√≠cula 202504017

#a)

import requests
import time
from IPython.display import clear_output

#Aqui eu importo as bibliotecas necess√°rias: requests pra buscar os dados da internet (no caso, da API da CoinGecko), time pra dar umas pausas entre as atualiza√ß√µes
# clear_output pra limpar a tela do Colab e deixar tudo organizadinho, sem repetir texto √† toa


#b)

def buscar_dados(moeda="bitcoin"):
    url = f"https://api.coingecko.com/api/v3/simple/price?ids={moeda}&vs_currencies=usd,brl"
    try:
        resposta = requests.get(url)
        resposta.raise_for_status()
        return resposta.json()[moeda]
    except:
        return None

#Aqui eu defino uma fun√ß√£o chamada buscar_dados() que vai at√© a API da CoinGecko e busca o pre√ßo atualizado da criptomoeda que o usu√°rio escolher, tanto em d√≥lar quanto em real,
#se a API der erro, a fun√ß√£o devolve None (vazio), e o c√≥digo trata isso depois.


#c)

def mostrar_menu():
    print("üêç Bem-vindo ao Mini Dashboard de Criptomoedas üí∏")
    print("Escolha a moeda que c√™ quer acompanhar:")
    print("1 - Bitcoin")
    print("2 - Ethereum")
    print("3 - Dogecoin")
    print("0 - Sair do sistema")

#Fun√ß√£o s√≥ pra mostrar o menu pro usu√°rio poder escolher qual moeda ele quer espiar.


#d)

def rodar_dashboard():
    opcoes = {
        "1": "bitcoin",
        "2": "ethereum",
        "3": "dogecoin"
    }

    while True:
        clear_output(wait=True)
        mostrar_menu()
        escolha = input("Digite o n√∫mero da moeda: ")

        if escolha == "0":
            print("Fal√¥, brigad√£o! Volta sempre que quiser dar uma olhada no mercado üëã")
            break

        moeda = opcoes.get(escolha)
        if not moeda:
            print("Uai, essa op√ß√£o a√≠ n√£o existe n√£o, s√¥. Tenta de novo...")
            time.sleep(2)
            continue

        while True:
            clear_output(wait=True)
            print(f"‚è≥ Atualizando valores de {moeda.capitalize()} em tempo real...\n")
            dados = buscar_dados(moeda)

            if dados:
                print(f"üìà {moeda.upper()}")
                print(f"üíµ D√≥lar (USD): ${dados['usd']:.2f}")
                print(f"üáßüá∑ Real (BRL): R${dados['brl']:.2f}")
            else:
                print("Eita! N√£o deu pra buscar os dados agora. A internet deve ter dado uma rateada.")

            print("\nüîÅ Atualizando de novo em 10 segundos...")
            print("üîô Se quiser voltar pro menu, √© s√≥ parar a c√©lula (bot√£o ‚ñ† ali em cima).")
            time.sleep(10)

#Essa fun√ß√£o √© o cora√ß√£o do sistema:
#Primeiro mostra o menu pro caboclo escolher a moeda
# Depois entra num la√ßo que fica buscando os pre√ßos atualizados e mostrando bonitinho
# A cada 10 segundos ele limpa a tela e busca de novo
#Se quiser parar, √© s√≥ parar a c√©lula (igual parar uma m√∫sica)

#e)
rodar_dashboard()

#Aqui √© onde o sistema realmente come√ßa a rodar, chamei a fun√ß√£o rodar_dashboard() pra come√ßar o painel de controle, tudo que o usu√°rio precisa fazer √© apertar ‚ñ∂Ô∏è no Colab e
#interagir com o menu.